--- configure.ac.orig	2013-06-27 19:30:46.000000000 +0100
+++ configure.ac	2015-01-04 17:19:48.036548382 +0000
@@ -5,7 +5,7 @@
 AC_INIT(libpqtypes, 1.5.1, libpqtypes@esilo.com)
 AC_CANONICAL_TARGET
 AC_PROG_MAKE_SET
-SET_MAKE="MAKE=make --no-print-directory"
+SET_MAKE="MAKE=gmake --no-print-directory"
 AC_CONFIG_AUX_DIR([.])
 AM_INIT_AUTOMAKE(libpqtypes,1.5.1)
 AC_SUBST([LIBPQTYPES_SO_VERSION], [1:5:1])
@@ -18,16 +18,15 @@
 AC_PROG_CC
 
 CPPFLAGS="$CPPFLAGS -Isrc"
-if test "$CC" = "gcc" ; then
 	# always want reentrant funcs, not just thread-safe mode. -s
-	CFLAGS="$CFLAGS -O3 -Wall -Wpointer-arith -D_GNU_SOURCE -D_REENTRANT -fsigned-char"
+	CFLAGS="$CFLAGS -O3 -Wall -Wpointer-arith -D_GNU_SOURCE -D_REENTRANT -fsigned-char -I/usr/local/include"
 
 	# gcc doesn't indicate an error for unknown options when they are
 	# not warning/feature options, -Wxxx or -fxxx.  We have to test manually.
 	cprog="int main(void){return 0;}"
-	gcctest="gcc -x c -c - -o /dev/null"
+	gcctest="$CC -x c -c - -o /dev/null"
 
-	AC_MSG_CHECKING(CFLAGS for gcc -std=gnu99...)
+	AC_MSG_CHECKING(CFLAGS for $CC -std=gnu99...)
 	result=`echo "$cprog" | $gcctest -std=gnu99 2>&1`
 	if test -z "$result" ; then
 		CFLAGS="$CFLAGS -std=gnu99"
@@ -51,9 +50,6 @@
 	AX_CFLAGS_GCC_OPTION([-fno-strict-aliasing])
 	AX_CFLAGS_GCC_OPTION([-funroll-all-loops])
 	AX_CFLAGS_GCC_OPTION([-funit-at-a-time])
-else
-	AC_MSG_ERROR([Using $CC instead of gcc, currently not supported])
-fi
 
 # Each case has an example of what target_os contains
 case ${target_os} in
