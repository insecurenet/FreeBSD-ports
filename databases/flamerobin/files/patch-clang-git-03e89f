--- src/gui/controls/DBHTreeControl.cpp
+++ src/gui/controls/DBHTreeControl.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -261,6 +261,8 @@
             id = ART_View; break;
         case ntViews:
             id = ART_Views; break;
+        default:
+            break;
     }
     return getImageIndex(id);
 }
--- src/gui/CreateIndexDialog.cpp
+++ src/gui/CreateIndexDialog.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -209,6 +209,7 @@
 class TableIndicesHandler: public URIHandler
 {
 public:
+    TableIndicesHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
--- src/gui/ExecuteSqlFrame.cpp
+++ src/gui/ExecuteSqlFrame.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -2749,6 +2749,7 @@
 class DropColumnHandler: public URIHandler
 {
 public:
+    DropColumnHandler() {};
     bool handleURI(URI& uri);
 private:
     static const DropColumnHandler handlerInstance;
@@ -2806,6 +2807,7 @@
 class DropColumnsHandler: public URIHandler
 {
 public:
+    DropColumnsHandler() {};
     bool handleURI(URI& uri);
 private:
     static const DropColumnsHandler handlerInstance;
@@ -2842,6 +2844,7 @@
 class DropObjectHandler: public URIHandler
 {
 public:
+    DropObjectHandler() {};
     bool handleURI(URI& uri);
 private:
     static const DropObjectHandler handlerInstance;
@@ -2878,6 +2881,7 @@
 class EditDDLHandler: public URIHandler
 {
 public:
+    EditDDLHandler() {};
     bool handleURI(URI& uri);
 private:
     static const EditDDLHandler handlerInstance;
@@ -2919,6 +2923,7 @@
 class EditProcedureHandler: public URIHandler
 {
 public:
+    EditProcedureHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
@@ -2947,6 +2952,7 @@
 class AlterViewHandler: public URIHandler
 {
 public:
+    AlterViewHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
@@ -2973,6 +2979,7 @@
 class EditTriggerHandler: public URIHandler
 {
 public:
+    EditTriggerHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
@@ -2999,6 +3006,7 @@
 class EditGeneratorValueHandler: public URIHandler
 {
 public:
+    EditGeneratorValueHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
@@ -3041,6 +3049,7 @@
 class EditExceptionHandler: public URIHandler
 {
 public:
+    EditExceptionHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
@@ -3067,6 +3076,7 @@
 class IndexActionHandler: public URIHandler
 {
 public:
+    IndexActionHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
@@ -3113,6 +3123,7 @@
 class ActivateTriggersHandler: public URIHandler
 {
 public:
+    ActivateTriggersHandler() {};
     bool handleURI(URI& uri);
 private:
     static const ActivateTriggersHandler handlerInstance;
@@ -3160,6 +3171,7 @@
 class ActivateTriggerHandler: public URIHandler
 {
 public:
+    ActivateTriggerHandler() {};
     bool handleURI(URI& uri);
 private:
     static const ActivateTriggerHandler handlerInstance;
--- src/gui/FieldPropertiesDialog.cpp
+++ src/gui/FieldPropertiesDialog.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -816,6 +816,7 @@
 class ColumnPropertiesHandler: public URIHandler
 {
 public:
+    ColumnPropertiesHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
--- src/gui/MetadataItemPropertiesFrame.cpp
+++ src/gui/MetadataItemPropertiesFrame.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -360,6 +360,8 @@
             case ntDatabase:
             case ntRole:
                 pages.push_back(wxT("DDL"));
+            default:
+                break;
         };
         wxString page = loadEntireFile(config().getHtmlTemplatesPath()
             + wxT("header.html"));
@@ -1290,6 +1292,7 @@
 class PageHandler: public URIHandler
 {
 public:
+    PageHandler() {};
     bool handleURI(URI& uri);
 private:
     static const PageHandler handlerInstance;   // singleton; registers itself on creation.
@@ -1327,6 +1330,7 @@
 class PropertiesHandler: public URIHandler
 {
 public:
+    PropertiesHandler() {};
     bool handleURI(URI& uri);
 private:
     static const PropertiesHandler handlerInstance; // singleton; registers itself on creation.
--- src/gui/PrivilegesDialog.cpp
+++ src/gui/PrivilegesDialog.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -583,6 +583,7 @@
 class ManagePrivilegesHandler: public URIHandler
 {
 public:
+    ManagePrivilegesHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
--- src/gui/ReorderFieldsDialog.cpp
+++ src/gui/ReorderFieldsDialog.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -215,6 +215,7 @@
 class ReorderFieldsHandler: public URIHandler
 {
 public:
+    ReorderFieldsHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
--- src/gui/TriggerWizardDialog.cpp
+++ src/gui/TriggerWizardDialog.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -178,6 +178,7 @@
 class CreateTriggerHandler: public URIHandler
 {
 public:
+    CreateTriggerHandler() {};
     bool handleURI(URI& uri);
 private:
     static const CreateTriggerHandler handlerInstance;
--- src/gui/UserDialog.cpp
+++ src/gui/UserDialog.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -222,6 +222,7 @@
 class UserPropertiesHandler: public URIHandler
 {
 public:
+    UserPropertiesHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
@@ -300,6 +301,7 @@
 class DropUserHandler: public URIHandler
 {
 public:
+    DropUserHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
--- src/addconstrainthandler.cpp
+++ src/addconstrainthandler.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -51,6 +51,8 @@
 class AddConstraintHandler: public URIHandler
 {
 public:
+    AddConstraintHandler() {};
+
     bool handleURI(URI& uri);
 private:
     static const AddConstraintHandler handlerInstance;    // singleton; registers itself on creation.
--- src/databasehandler.cpp
+++ src/databasehandler.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -46,6 +46,7 @@
 class DatabaseInfoHandler: public URIHandler
 {
 public:
+    DatabaseInfoHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
--- src/images.cpp
+++ src/images.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -68,6 +68,8 @@
             return wxArtProvider::GetIcon(ART_Trigger, wxART_OTHER, sz);
         case ntView:
             return wxArtProvider::GetIcon(ART_View, wxART_OTHER, sz);
+        default:
+            break;
     }
     return wxArtProvider::GetIcon(ART_FlameRobin, wxART_OTHER, sz);
 }
--- src/objectdescriptionhandler.cpp
+++ src/objectdescriptionhandler.cpp
@@ -1,5 +1,5 @@
 /*
-  Copyright (c) 2004-2009 The FlameRobin Development Team
+  Copyright (c) 2004-2011 The FlameRobin Development Team
 
   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
@@ -46,6 +46,7 @@
 class ObjectDescriptionHandler: public URIHandler
 {
 public:
+    ObjectDescriptionHandler() {};
     bool handleURI(URI& uri);
 private:
     // singleton; registers itself on creation.
