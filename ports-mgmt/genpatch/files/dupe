#!/bin/sh
#
# Usage: dupe origfile
#
# This will make a duplicate of the file indicate by the first argument.
# If <origfile>.orig does not exist, the duplicate will have this name,
# otherwise it will be called <origfile>.intermediate.
# This is a complementary tool of genpatch
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

if [ $# -eq 1 ]; then
	old=${1}
	if [ ! -f ${old} ]; then
		echo "${0}: '${old}' does not exist! aborting..."
		exit 1;
	fi
	if [ -f "${old}.orig" ]; then
		new="${old}.intermediate"
	else
		new="${old}.orig"
	fi
else
	echo "${0}: need exactly one argument"
	echo "${0} <path/to/original/file>"
	exit 1;
fi

cp -p ${old} ${new}
