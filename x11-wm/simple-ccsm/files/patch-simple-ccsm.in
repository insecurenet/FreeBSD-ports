--- simple-ccsm.in.orig	2011-04-21 06:18:45.000000000 -0400
+++ simple-ccsm.in	2014-06-03 14:24:33.000000000 -0400
@@ -513,7 +513,7 @@
             if not box.get_model():
                 continue
             text = box.get_active_text()
-            setting = plugin.Screen[settingName]
+            setting = plugin.Screens[0][settingName]
             if len(setting.Value) >= 1:
                 value = setting.Value[0]
                 if names[settingName].has_key(value):
@@ -639,7 +639,7 @@
 
         text = widget.get_active_text()
         plugin = self.Context.Plugins['animation']
-        setting = plugin.Screen[settingName]
+        setting = plugin.Screens[0][settingName]
         value = setting.Value
         if len(value) >= 1:
             if text:  # Handle "chosen animation is in an extension plugin" case
@@ -647,7 +647,7 @@
                 setting.Value = value
                 self.Context.Write()
         else:
-            for setting in plugin.Groups[setting.Group][setting.SubGroup].Screen.values():
+            for setting in plugin.Groups[setting.Group][setting.SubGroup].Screens[0].values():
                 setting.Reset()
             self.Context.Write()
             self.AnimationBoxChanged(widget, settingName)
@@ -684,7 +684,7 @@
         
         for boxName, settingName in AnimationSettings.items():
             box = self.GladeXML.get_widget(boxName)
-            setting = plugin.Screen[settingName]
+            setting = plugin.Screens[0][settingName]
             info = setting.Info[1]
             itemsByValue = info[1]
             items = info[2]
@@ -726,9 +726,9 @@
                 else:
                     self.SwitcherPlugins[plugin.ShortDesc] = plugin
 
-                setting = plugin.Screen['next_key']
+                setting = plugin.Display['next_key']
                 self.SwitcherKeySettings[pluginName] = setting
-                setting = plugin.Screen['prev_key']
+                setting = plugin.Display['prev_key']
                 self.ReverseSwitcherKeySettings[pluginName] = setting
 
 
@@ -790,7 +790,7 @@
 
             # Exception for shift, since it has 2 modes
             if plugin.Name == 'shift':
-                setting = plugin.Screen['mode']
+                setting = plugin.Screens[0]['mode']
 
                 if text.find(_("Cover")) != -1:
                     setting.Value = 0
@@ -805,7 +805,7 @@
 
         text = widget.get_active_text()
         plugin = self.Context.Plugins['cubeaddon']
-        setting = plugin.Screen['deformation']
+        setting = plugin.Screens[0]['deformation']
         value = setting.Info[2][text]
         if value != 0 and not plugin.Enabled:
             EnablePlugin(plugin, True)
@@ -820,7 +820,7 @@
         value = widget.get_value()
         plugin = self.Context.Plugins['cube']
         # Only change cube opacity on rotate
-        setting = plugin.Screen['active_opacity']
+        setting = plugin.Screens[0]['active_opacity']
         setting.Value = float(value)
 
         self.Context.Write()
@@ -831,7 +831,7 @@
 
         value = widget.get_active()
         plugin = self.Context.Plugins['cubeaddon']
-        setting = plugin.Screen['reflection']
+        setting = plugin.Screens[0]['reflection']
         setting.Value = value
 
         self.Context.Write()
@@ -871,7 +871,7 @@
             return
 
         plugin = self.Context.Plugins['cube']
-        setting = plugin.Screen['active_opacity']
+        setting = plugin.Screens[0]['active_opacity']
         value = setting.Value
         widget.set_value(int(value))
 
@@ -882,7 +882,7 @@
             return
 
         plugin = self.Context.Plugins['cubeaddon']
-        setting = plugin.Screen['reflection']
+        setting = plugin.Screens[0]['reflection']
         value = setting.Value
         widget.set_active(value)
 
@@ -898,7 +898,7 @@
             if plugin.Enabled:
                 if plugin.Name == 'shift':
                     modes = [_("Cover"), _("Flip")]
-                    setting = plugin.Screen['mode']
+                    setting = plugin.Screens[0]['mode']
                     mode = modes[setting.Value]
                     if mode in shortDesc:
                         box.set_active(i)
@@ -915,7 +915,7 @@
             return
 
         plugin = self.Context.Plugins['cubeaddon']
-        setting = plugin.Screen['deformation']
+        setting = plugin.Screens[0]['deformation']
 
         items = sorted(setting.Info[2].items(), key=ccm.EnumSettingKeyFunc)
         for key, value in items:
@@ -964,7 +964,7 @@
         settingName = settings[name]
 
         value = widget.get_value()
-        self.Context.Plugins['core'].Screen[settingName].Value = value
+        self.Context.Plugins['core'].Screens[0][settingName].Value = value
         self.Context.Write()
         self.SetDesktopPreview()
 
@@ -985,7 +985,7 @@
                 plugin.Enabled = True
                 # exception for cube, since it requires rotate
                 if plugin.Name == 'cube':
-                    setting = self.Context.Plugins['core'].Screen['vsize']
+                    setting = self.Context.Plugins['core'].Screens[0]['vsize']
                     setting.Value = 1 # Cube can only use 1 vertical viewport
                     EnablePlugin(self.Context.Plugins['rotate'], True)
                     EnablePlugin(self.Context.Plugins['cubeaddon'], True)
@@ -994,8 +994,8 @@
         self.SetDesktopSize()
 
     def SetDesktopPreview(self):
-        hsize = self.Context.Plugins['core'].Screen["hsize"].Value
-        vsize = self.Context.Plugins['core'].Screen["vsize"].Value
+        hsize = self.Context.Plugins['core'].Screens[0]["hsize"].Value
+        vsize = self.Context.Plugins['core'].Screens[0]["vsize"].Value
         self.DesktopPreview.set_value((hsize, vsize))
 
     def SetDesktopSize(self):
@@ -1004,7 +1004,7 @@
 
         for widgetName, settingName in scales.items():
             widget = self.GladeXML.get_widget(widgetName)
-            setting = self.Context.Plugins['core'].Screen[settingName]
+            setting = self.Context.Plugins['core'].Screens[0][settingName]
             widget.set_value(setting.Value)
 
     def FillAppearenceBox(self):
@@ -1084,7 +1084,7 @@
 
             if identifier not in self.Widgets:
                 plugin    = self.Context.Plugins[pluginName]
-                setting   = plugin.Screen[settingName]
+                setting   = plugin.Display[settingName]
                 widget    = ccm.MakeSetting(setting)
                 container = self.GladeXML.get_widget(containerName)
                 container.pack_start(widget.EBox)
@@ -1425,4 +1425,6 @@
     gtk.window_set_default_icon_name('simple-ccsm')
     mainWin = MainWin(context, page)
     gdk.threads_init()
+    gdk.threads_enter()
     gtk.main()
+    gdk.threads_leave()
